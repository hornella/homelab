networks:
  homelab:
    driver: bridge

services:
  media:
   flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/Toronto
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped
    networks:
      - homelab
    profiles:
      - media

  jellyseerr:
      image: fallenbagel/jellyseerr:latest
      container_name: jellyseerr
      networks:
        - homelab
      environment:
        - LOG_LEVEL=debug
        - TZ=America/Toronto
        - PORT=5055 #optional
      ports:
        - 5055:5055
      volumes:
        - ~/docker/jellyseerr:/app/config
      healthcheck:
        test: wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1
        start_period: 20s
        timeout: 3s
        interval: 15s
        retries: 3
      restart: unless-stopped
      profiles:
        - media
  
  sabnzbd:
      image: lscr.io/linuxserver/sabnzbd:latest
      container_name: sabnzbd
      environment:
        - PUID=1000
        - PGID=1000
        - TZ=America/Toronto
      volumes:
        - ~/docker/sabnzbd/config:/config
        - /mnt/F84ED8864ED83ED6/Media/usenet/incomplete:/incomplete-downloads #optional
        - /mnt/F84ED8864ED83ED6/Media/usenet/downloads:/downloads #optional
      ports:
        - 8075:8075
      networks:
        - homelab
      restart: unless-stopped
      profiles:
        - media

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
    volumes:
      - ~/dockerradarr/data:/config
    ports:
      - 7878:7878
    restart: unless-stopped
    networks:
      - homelab
    profiles:
      - media

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
    volumes:
      - ~/docker/sonarr/data:/config
    ports:
      - 8989:8989
    restart: unless-stopped
    networks:
      - homelab
    profiles:
      - media
  
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
    volumes:
      - ~/docker/prowlarr/data:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    networks:
      - homelab
    profiles:
      - media
  
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ~/docker/qbittorrent/appdata:/config
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    networks:
      - homelab
    profiles:
      - media
  
  # Uncomment the following services if you want to use them
  #webserver:
    # pihole:
    #   image: pihole/pihole:latest
    #   container_name: pihole
    #   restart: unless-stopped
    #   networks:
    #     - homelab
    #   ports:
    #     - "53:53/tcp"
    #     - "53:53/udp"
    #     - "8081:80"  # Pi-hole admin interface
    #   environment:
    #     TZ: "America/Toronto"
    #     WEBPASSWORD: "changeme"
    #   volumes:
    #     - ./pihole/etc-pihole:/etc/pihole
    #     - ./pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    #   profiles:
    #     - webserver

    # npm:
    #   image: jc21/nginx-proxy-manager:latest
    #   container_name: nginx-proxy-manager
    #   restart: unless-stopped
    #   networks:
    #     - homelab
    #   ports:
    #     - "80:80"
    #     - "443:443"
    #     - "81:81"
    #   extra_hosts:
    #     - "host.docker.internal:host-gateway"
    #   volumes:
    #     - ./nginx-proxy-manager/data:/data
    #     - ./nginx-proxy-manager/letsencrypt:/etc/letsencrypt
    #   profiles:
    #     - webserver

  monitoring:
    prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      networks:
        - homelab
      volumes:
        - ./monitoring/prometheus:/etc/prometheus
      ports:
        - "9090:9090"
      command:
        - "--config.file=/etc/prometheus/prometheus.yml"
      restart: unless-stopped
      profiles:
        - monitoring

    node_exporter:
      image: prom/node-exporter:latest
      container_name: node_exporter
      networks:
        - homelab
      ports:
        - "9100:9100"
      restart: unless-stopped
      profiles:
        - monitoring

    grafana:
      image: grafana/grafana:latest
      container_name: grafana
      networks:
        - homelab
      ports:
        - "3000:3000"
      volumes:
        - ./monitoring/grafana:/var/lib/grafana
      restart: unless-stopped
      profiles:
        - monitoring
